<!DOCTYPE html>
<html>

<head>
  <meta name="viewport" content="initial-scale=1.0, user-scalable=no" />
  <link href="bootstrap/css/bootstrap.min.css" rel="stylesheet" media="screen" />
  <style type="text/css">
    html { height: 100%; }
    body { height: 100%; margin: 0; padding: 0; }
    #map-canvas { height: 100%; }
    #map-canvas img { max-width: none; }
    #map-canvas label { width: auto; display:inline; }
  </style>
  <script src="http://code.jquery.com/jquery.js"></script>
  <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyA5kXsecPZL9UEHQjL1gjwth-dGbrcXf2A&sensor=false"></script>
  <!-- script type="text/javascript" src="path.js"></script -->
  <script type="text/javascript">
    var colors = ['#000000', '#FFFFFF', '#FF0000', '#FFFF00', '#0000FF', '#FF00FF', '#00FFFF'];
    var isMapEmpty = true;
    var mapBounds = new google.maps.LatLngBounds();

    function initialize() {
      var mapOptions = {
        center: new google.maps.LatLng(37.301589, -121.926015),
        zoom: 8,
        mapTypeId: google.maps.MapTypeId.ROADMAP,
      };
      var map = new google.maps.Map(document.getElementById("map-canvas"),
        mapOptions);

      /* var dirRequest = {
        origin: new google.maps.LatLng(37.3007950, -121.9255450),
        destination: new google.maps.LatLng(37.3008950, -121.9255350),
        travelMode: google.maps.TravelMode.BICYCLING
      };
      var dirServices = new google.maps.DirectionsService();
      dirServices.route(
        dirRequest,
        function (result, status) {
          if (status == google.maps.DirectionsStatus.OK) {
            var renderer = new google.maps.DirectionsRenderer();
            renderer.setMap(map);
            renderer.setDirections(result);
          }
        }
      ); */

      $('#gpxfile').change(function() {
        var file = this.files[0];
        var formData = new FormData();
        formData.append('gpxfile', file);
        var xhr = new XMLHttpRequest();
        xhr.open('POST', '/');
        xhr.onreadystatechange = function() {
          if (this.readyState == this.DONE) {
            if (this.status == 200) {
              var path = getGoogleMapsPath(this.responseText)
              if (isMapEmpty == true) {
                map.fitBounds(getPathBounds(path));
              } else {
                mapBounds.union(getPathBounds(path));
                /* google.maps.event.addListener(map, 'bounds_changed', function(event) {
                  map.setCenter(center);
                  map.setZoom(zoom);
                }); */
                map.fitBounds(mapBounds);
              }            
              drawPolyline(map, path);
            }
          }
        };
        xhr.send(formData);
      });
    }
    google.maps.event.addDomListener(window, 'load', initialize);

    function loadFile() {
      $('#gpxfile').trigger('click');
    }

    function getGoogleMapsPath(responseJSON) {
      var arrayLatLng = [];
      var arrayJSON = $.parseJSON(responseJSON); 
      for (var ii = 0; ii < arrayJSON.length; ii++) {
        var coor = arrayJSON[ii];
        arrayLatLng.push(new google.maps.LatLng(coor.latitude, coor.longitude));
      }
      return arrayLatLng;
    }

    function getPathBounds(path) {
      var bounds = new google.maps.LatLngBounds();
      for (var ii = 0; ii < path.length; ii++) {
        bounds.extend(path[ii]);
      }
      return bounds;
    }

    function drawPolyline(map, path) {
      var color = getNextColor();
      var poly = new google.maps.Polyline({
        path: path,
        strokeColor: color,
        strokeOpacity: 0.7,
        strokeWeight: 5
      });
      poly.setMap(map);
      google.maps.event.addListener(poly, 'mouseover', function() {
        this.setOptions({
          strokeColor: '#0000FF'
        });
      });
      google.maps.event.addListener(poly, 'mouseout', function() {
        this.setOptions({
          strokeColor: color
        });
      });
      isMapEmpty = false;
    }

    function getNextColor() {
      var color = colors.shift();
      colors.push(color);
      return color;
    }
  </script>
</head>

<body>
  <div style="position: absolute; z-index: 1; top: 90%; left: 2%;">
    <div class="btn-group dropup">
      <a class="btn btn-large btn-inverse dropdown-toggle" data-toggle="dropdown" href="#">
        Tools
        <span class="caret"></span>
      </a>
      <ul class="dropdown-menu">
        <li><a href="javascript:loadFile()">Load GPX</a></li>
      </ul>
    </div>
  </div>
  <div id="map-canvas"></div>
  <form method="post" enctype="multipart/form-data" id="gpxform">
    <input type="file" name="gpxfile" id="gpxfile" style="opacity: 0;" />
    <input type="submit" id="gpxsend" style="opacity: 0;" />
  </form>
  <script src="bootstrap/js/bootstrap.min.js"></script>
</body>

</html>
